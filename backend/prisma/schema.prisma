generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-3.0.x", "windows"]
}

datasource db {
  provider = "postgresql"  // üîÑ Cambiado de sqlite a postgresql
  url      = env("DATABASE_URL")
}

// ==================== CLIENTES ====================
model Cliente {
  id              String   @id @default(uuid())
  nombre          String
  telefono        String   @unique
  email           String?
  fechaRegistro   DateTime @default(now())
  notas           String?
  activo          Boolean  @default(true)
  origen          String   @default("MANUAL")  // üÜï NUEVO: MANUAL, WHATSAPP, TELEFONO
  
  citas           Cita[]
  transacciones   Transaccion[]
  conversaciones  Conversacion[]  // üÜï NUEVO: Relaci√≥n con conversaciones
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([telefono])
  @@index([nombre])
  @@index([origen])  // üÜï NUEVO: √çndice para origen
}

// ==================== EMPLEADOS ====================
model Empleado {
  id              String   @id @default(uuid())
  nombre          String
  telefono        String
  especialidades  String
  horarioLunes    String?
  horarioMartes   String?
  horarioMiercoles String?
  horarioJueves   String?
  horarioViernes  String?
  horarioSabado   String?
  horarioDomingo  String?
  activo          Boolean  @default(true)
  fechaIngreso    DateTime @default(now())
  
  citas           Cita[]
  transacciones   Transaccion[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([activo])
}

// ==================== SERVICIOS ====================
model Servicio {
  id              String   @id @default(uuid())
  nombre          String
  descripcion     String?
  precio          Float
  duracionMinutos Int
  activo          Boolean  @default(true)
  
  items           TransaccionItem[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([activo])
}

// ==================== CITAS ====================
model Cita {
  id                String   @id @default(uuid())
  clienteId         String
  empleadoId        String
  servicioNombre    String
  fechaHora         DateTime
  duracionMinutos   Int
  estado            String   @default("PENDIENTE")
  origen            String   @default("MANUAL")
  notas             String?
  motivoCancelacion String?
  conversacionId    String?  // üÜï NUEVO: Relaci√≥n opcional con conversaci√≥n
  
  cliente           Cliente      @relation(fields: [clienteId], references: [id])
  empleado          Empleado     @relation(fields: [empleadoId], references: [id])
  conversacion      Conversacion? @relation(fields: [conversacionId], references: [id])  // üÜï NUEVO
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@index([fechaHora])
  @@index([empleadoId, fechaHora])
  @@index([estado])
  @@index([origen])  // üÜï NUEVO: √çndice para origen
}

// ==================== TRANSACCIONES ====================
model Transaccion {
  id              String   @id @default(uuid())
  tipo            String
  clienteId       String?
  empleadoId      String?
  fecha           DateTime @default(now())
  total           Float
  metodoPago      String
  referencia      String?
  concepto        String?
  categoria       String?
  notas           String?
  
  items           TransaccionItem[]
  cliente         Cliente? @relation(fields: [clienteId], references: [id])
  empleado        Empleado? @relation(fields: [empleadoId], references: [id])
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([fecha])
  @@index([tipo, fecha])
  @@index([metodoPago])
}

model TransaccionItem {
  id              String      @id @default(uuid())
  transaccionId   String
  servicioId      String
  cantidad        Int         @default(1)
  precioUnitario  Float
  subtotal        Float
  
  transaccion     Transaccion @relation(fields: [transaccionId], references: [id], onDelete: Cascade)
  servicio        Servicio    @relation(fields: [servicioId], references: [id])
  
  createdAt       DateTime    @default(now())
  
  @@index([transaccionId])
}

// ==================== CIERRE DE CAJA ====================
model CierreCaja {
  id                  String   @id @default(uuid())
  fecha               DateTime @default(now())
  efectivoInicial     Float
  efectivoFinal       Float
  efectivoEsperado    Float
  ingresos            Float
  egresos             Float
  diferencia          Float
  totalTransferencias Float
  notas               String?
  
  createdAt           DateTime @default(now())
  
  @@index([fecha])
}

// ==================== CONFIGURACI√ìN ====================
model Configuracion {
  id          String   @id @default(uuid())
  clave       String   @unique
  valor       String
  descripcion String?
  
  updatedAt   DateTime @updatedAt
}

// ==================== WHATSAPP - CONVERSACIONES ==================== üÜï NUEVO
model Conversacion {
  id              String   @id @default(uuid())
  clienteTelefono String
  clienteId       String?
  estado          String   @default("ACTIVA")
  contexto        String?
  paso            String   @default("INICIAL")
  ultimoMensaje   DateTime @default(now())
  
  cliente         Cliente? @relation(fields: [clienteId], references: [id])
  mensajes        MensajeWhatsApp[]
  citas           Cita[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([clienteTelefono])
  @@index([estado])
  @@index([ultimoMensaje])
}

// ==================== WHATSAPP - MENSAJES ==================== üÜï NUEVO
model MensajeWhatsApp {
  id              String   @id @default(uuid())
  conversacionId  String
  waMessageId     String   @unique
  remitente       String
  mensaje         String
  tipo            String   @default("TEXTO")
  metadata        String?
  timestamp       DateTime @default(now())
  
  conversacion    Conversacion @relation(fields: [conversacionId], references: [id], onDelete: Cascade)
  
  createdAt       DateTime @default(now())
  
  @@index([conversacionId])
  @@index([timestamp])
}